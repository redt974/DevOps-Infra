#!/bin/bash

# Configuration
VM_SSH_KEY="$HOME/.ssh/vm-access_id_rsa"
TF_SSH_KEY="$HOME/.ssh/id_rsa_terraform"
PROXMOX_USER="root"
PROXMOX_HOST="192.168.10.180"
CLOUD_INIT_USER_DATA="./default-cloud-init/user_data"

# 1. G√©n√©rer la cl√© SSH pour la VM (cloud-init)
echo "üîê G√©n√©ration cl√© SSH pour cloud-init (VM)..."
ssh-keygen -t rsa -b 4096 -N '' -f "$VM_SSH_KEY" -C "vm-access"

# Affichage de la cl√© publique
echo "üìÑ Cl√© publique g√©n√©r√©e :"
cat "$VM_SSH_KEY.pub"

# S'assurer que le dossier existe
mkdir -p "$(dirname "$CLOUD_INIT_USER_DATA")"

# Injecter dans user_data YAML
echo "üìÑ Mise √† jour de $CLOUD_INIT_USER_DATA..."
cat > "$CLOUD_INIT_USER_DATA" <<EOF
#cloud-config
ssh_authorized_keys:
  - $(cat "$VM_SSH_KEY.pub")
EOF

# 2. G√©n√©rer la cl√© SSH pour Terraform (connexion Proxmox)
echo "üîê G√©n√©ration cl√© SSH pour Terraform <=> Proxmox..."
ssh-keygen -t rsa -b 4096 -N '' -f "$TF_SSH_KEY" -C "terraform key"

# 3. Copie automatique sur Proxmox (si accessible)
echo "üì§ Copie de la cl√© publique sur $PROXMOX_HOST..."
if ssh -o ConnectTimeout=3 "$PROXMOX_USER@$PROXMOX_HOST" 'exit' 2>/dev/null; then
  ssh-copy-id -i "$TF_SSH_KEY.pub" "$PROXMOX_USER@$PROXMOX_HOST"
else
  echo "‚ö†Ô∏è Proxmox non joignable. Copie manuelle n√©cessaire."
  echo "‚û°Ô∏è Connectez-vous et collez le contenu suivant dans ~/.ssh/authorized_keys sur Proxmox :"
  cat "$TF_SSH_KEY.pub"
fi

# 4. Permissions SSH (utile en cas de copie manuelle)
echo "üõ°Ô∏è V√©rification des permissions (~/.ssh/authorized_keys sur Proxmox)"
echo "Connectez-vous et ex√©cutez :"
echo "chmod 700 ~/.ssh && chmod 600 ~/.ssh/authorized_keys"

# 5. Ajout de la cl√© dans l'agent SSH
echo "üíº Chargement de la cl√© priv√©e dans ssh-agent..."
eval "$(ssh-agent -s)"
ssh-add "$TF_SSH_KEY"

# 6. Test SSH
echo "üß™ Test de la connexion SSH √† Proxmox..."
ssh -o BatchMode=yes -i "$TF_SSH_KEY" "$PROXMOX_USER@$PROXMOX_HOST" "echo '‚úÖ Connexion r√©ussie √† Proxmox'" || {
  echo "‚ùå Connexion SSH √©chou√©e. V√©rifiez les √©tapes pr√©c√©dentes."
  exit 1
}

# 7. Chargement des variables d‚Äôenvironnement (.env)
if [ -f .env ]; then
  echo "üì¶ Chargement des variables depuis .env..."
  set -a
  source .env
  set +a
else
  echo "‚ö†Ô∏è Fichier .env manquant (non bloquant ici)."
fi

# 8. Terraform Initialisation
echo "üöÄ Lancement de Terraform..."
terraform init
terraform validate

echo "‚úÖ Setup termin√©. Vous pouvez lancer terraform apply si tout est OK.